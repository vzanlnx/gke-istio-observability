#
# DATABASE - MONGODB
#
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    service: mongodb
    app: mongodb
spec:
  ports:
  - port: 27017
    name: mongo
  selector:
    app: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: gcr.io/observability-stack-306419/mongodb:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      volumes:
      - name: mongo-data
        emptyDir: {}
#
# REVIEWS SERVICE
#
---
apiVersion: v1
kind: Service
metadata:
  name: reviews
  labels:
    service: reviews
    app: reviews
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews
  labels:
    app: reviews
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
  template:
    metadata:
      labels:
        app: reviews
    spec:
      containers:
      - name: reviews
        image: gcr.io/observability-stack-306419/reviews:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs" 
        ports:
        - containerPort: 9080
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
#
# RATINGS SERVICE
#
---
apiVersion: v1
kind: Service
metadata:
  name: ratings
  labels:
    service: ratings
    app: ratings
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: ratings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings
  labels:
    app: ratings
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
  template:
    metadata:
      labels:
        app: ratings
    spec:
     containers:
      - name: ratings
        image: gcr.io/observability-stack-306419/ratings:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        securityContext:
          runAsUser: 1000
        env:
        - name: MONGO_DB_URL
          value: mongodb://mongodb:27017/test
#
# DETAILS SERVICE
#
---
apiVersion: v1
kind: Service
metadata:
  name: details
  labels:
    service: details
    app: details
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: details
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: details
  labels:
    app: details
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details
  template:
    metadata:
      labels:
        app: details
    spec:
      containers:
      - name: details
        image: gcr.io/observability-stack-306419/details:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
        securityContext:
          runAsUser: 1000
#
# PRODUCTPAGE SERVICE
#
---
apiVersion: v1
kind: Service
metadata:
  name: productpage
  labels:
    service: productpage
    app: productpage
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage
  labels:
    app: productpage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
  template:
    metadata:
      labels:
        app: productpage
    spec:
      containers:
      - name: productpage
        image: gcr.io/observability-stack-306419/productpage:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        ports:
        - containerPort: 9080
        securityContext:
          runAsUser: 1000
      volumes:
      - name: tmp
        emptyDir: {}
---